* Reading graph from file 8
12 vertices
15 edges
0 -> 6 = 0
0 -> 7 = 0
1 -> 9 = 1
2 -> 11 = 2
3 -> 11 = 3
4 -> 1 = 4
4 -> 5 = 4
5 -> 8 = 5
6 -> 3 = 6
6 -> 10 = 6
7 -> 2 = 7
7 -> 8 = 7
8 -> 9 = 8
9 -> 4 = 9
10 -> 1 = 10

 ~~Graph Display~~
Adjacency matrix: 

    0  1  2  3  4  5  6  7  8  9  10 11 
0 : 0  0  0  0  0  0  1  1  0  0  0  0  
1 : 0  0  0  0  0  0  0  0  0  1  0  0  
2 : 0  0  0  0  0  0  0  0  0  0  0  1  
3 : 0  0  0  0  0  0  0  0  0  0  0  1  
4 : 0  1  0  0  0  1  0  0  0  0  0  0  
5 : 0  0  0  0  0  0  0  0  1  0  0  0  
6 : 0  0  0  1  0  0  0  0  0  0  1  0  
7 : 0  0  1  0  0  0  0  0  1  0  0  0  
8 : 0  0  0  0  0  0  0  0  0  1  0  0  
9 : 0  0  0  0  1  0  0  0  0  0  0  0  
10: 0  1  0  0  0  0  0  0  0  0  0  0  
11: 0  0  0  0  0  0  0  0  0  0  0  0  


Value matrix: 

    0  1  2  3  4  5  6  7  8  9  10 11 
0 : -  -  -  -  -  -  0  0  -  -  -  -  
1 : -  -  -  -  -  -  -  -  -  1  -  -  
2 : -  -  -  -  -  -  -  -  -  -  -  2  
3 : -  -  -  -  -  -  -  -  -  -  -  3  
4 : -  4  -  -  -  4  -  -  -  -  -  -  
5 : -  -  -  -  -  -  -  -  5  -  -  -  
6 : -  -  -  6  -  -  -  -  -  -  6  -  
7 : -  -  7  -  -  -  -  -  7  -  -  -  
8 : -  -  -  -  -  -  -  -  -  8  -  -  
9 : -  -  -  -  9  -  -  -  -  -  -  -  
10: -  10 -  -  -  -  -  -  -  -  -  -  
11: -  -  -  -  -  -  -  -  -  -  -  -  

~~ Cycle Detection by removing states ~~

Step 0:
  Elimination of entry points: 0 
  Remaining Vertices: 1 2 3 4 5 6 7 8 9 10 11 
  New entry points: 6 7 

Step 1:
  Elimination of entry points: 6 7 
  Remaining Vertices: 1 2 3 4 5 8 9 10 11 
  New entry points: 3 10 2 

Step 2:
  Elimination of entry points: 3 10 2 
  Remaining Vertices: 1 4 5 8 9 11 
  New entry points: 11 

Step 3:
  Elimination of entry points: 11 
  Remaining Vertices: 1 4 5 8 9 
  New entry points: None

The graph contains a cycle.

~~~Schedule~~~
 Checking for single entry: TRUE
 Checking for single exit: TRUE
 Checking for lack of Cycle: FALSE
     GRAPH IS NOT SCHEDULABLE